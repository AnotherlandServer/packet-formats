# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: https://github.com/plehmkuhl/otherland-packet-formats/otherland.packet.schema.yaml
title: "Otherland packet format description"

allOf:
  - type: object
    required: [id, subId]
    properties:
      id:
        type: integer
      subId:
        type: integer
      inherit:
        type: string
        
  - { $ref: "#/$defs/fieldsList" }

$defs:
  fieldsList:
    type: object
    properties:
      fields:
        type: array
        items: { $ref: "#/$defs/fieldItem" }

  fieldItem:
    anyOf:
      - { $ref: "#/$defs/field" }
      - { $ref: "#/$defs/branch" }
      - { $ref: "#/$defs/loop" }

  branch:
    type: object
    additionalProperties: false
    required: [branch]
    properties:
      branch:
        type: object
        required: [field]
        properties:
          field:
            type: string
          test_flag:
            type: integer
          test_equal:
            type: integer
          isTrue: { $ref: "#/$defs/fieldsList" }
          isFalse: { $ref: "#/$defs/fieldsList" }

  loop:
    type: object
    additionalProperties: false
    required: [loop]
    properties:
      loop:
        type: object
        required: [field]
        properties:
          field:
            type: string
          body: { $ref: "#/$defs/fieldsList" }

  field:
    type: object
    required: [type]
    additionalProperties: false
    properties:
      name:
        type: string
      type:
        $ref: "#/$defs/fieldType"

  fieldType:
    anyOf:
      - { $ref: "#/$defs/primitiveFieldType" }
      - { $ref: "#/$defs/limitedStringFieldType" }
      - { $ref: "#/$defs/arrayFieldType" }
      - { $ref: "#/$defs/enumFieldType" }

  primitiveFieldType:
    anyOf:
      - type: string
        enum: [bool, cstring, wstring, u8, u16, u32, u64, i8, i16, i32, i64, f32, f64, nativeparam]
      - type: string
        pattern: ^:.+

  limitedStringFieldType:
    type: object
    additionalProperties: false
    required: [name, maxlen]
    properties:
      name:
        enum: [cstring, wstring]
      maxlen:
        type: [integer, string]

  arrayFieldType:
    type: object
    additionalProperties: false
    required: [name, len, type]
    properties:
      name:
        const: array
      len:
        type: [integer, string]
      type: { $ref: "#/$defs/primitiveFieldType" }

  enumFieldType:
    type: object
    additionalProperties: false
    required: [name]
    properties:
      name: { $ref: "#/$defs/primitiveFieldType" }
      enum:
        type: object
        additionalProperties: false
        patternProperties:
          "^[0-9]+$":
            type: string