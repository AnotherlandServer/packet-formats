# yaml-language-server: $schema=../otherland.packet.schema.yaml

packets:
  oaPktConfirmTravel:
    id: 0x8c
    subId: 0x92
    inherit: CPkt
    fields:
      - type: u64 # ignored by client
      - type: u32 # ignored by client
      - type: u32
        name: state
      - type: uuid # ignored by client
      - type: cstring # ignored by client
      - type: cstring # ignored by client
  oaPktServerAction:
    id: 0x8c
    subId: 0x31
    inherit: CPkt
    fields:
      - type: u64
      - name: instigator
        type: avatar_id
      - name: action
        type: cstring
      - name: version
        type: u32
      - type: cstring
      - name: overrideTeleport
        type: bool
      - type: :NetworkVec3
        name: pos
      - type: :NetworkQuat
        name: rot
  CPktTargetRequest:
    id: 0x66
    subId: 0x0
    inherit: CPkt
    fields:
      - name: avatarId
        type: avatar_id
      - name: targetAvatarId
        type: avatar_id
      - type: u16
  oaPktPortalRequestAck:
    id: 0x8c
    subId: 0x37
    inherit: CPkt
    fields:
      - type: avatar_id
        name: avatarId
      - type: avatar_id
        name: portalId
      - type: u16
      - type: u32
        name: arrayLenA
      - type: { name: array, len: arrayLenA, type: :PortalAckPartB}
      - type: u32
        name: arrayLenB
      - type: { name: array, len: arrayLenB, type: :PortalAckPartA}
      - type: u32
        name: arrayLenC
      - type: { name: array, len: arrayLenC, type: :PortalAckPartB}
      - type: u32
        name: arrayLenD
      - type: { name: array, len: arrayLenD, type: :PortalAckPartB}
      - type: nativeparam
  CPktRequestAvatarBehaviors:
    id: 0x35
    subId: 0x0
    inherit: CPkt
    fields:
      - name: avatarId
        type: avatar_id
      - type: bool
      - name: behaviour
        type: cstring
      - name: data
        type: cstring
  oaPktAvatarTellBehavior:
    id: 0x3a
    subId: 0x0
    inherit: CPkt
    fields:
      - name: instigator
        type: avatar_id
      - name: target
        type: avatar_id
      - name: behavior
        type: cstring
  oaPktAvatarTellBehaviorBinary:
    id: 0x8c
    subId: 0x2
    inherit: CPkt
    fields:
      - name: instigator
        type: avatar_id
      - name: target
        type: avatar_id
      - name: behavior
        type: cstring
      - name: data
        type: nativeparam
  oaPktLoopActionIterruptible:
    id: 0x8c
    subId: 0x28
    inherit: CPkt
    fields:
      - name: target
        type: avatar_id
      - name: command
        type:
          name: u16
          enum:
            0: PlayLoopActionInterruptible
            1: PlayInterruptLoopAction
            2: StopInterruptLoopAction
      - name: animName
        type: cstring
  oaPktAbilityRequest:
    id: 0x8c
    subId: 0x9a
    inherit: CPkt
    fields:
      - name: source
        type: avatar_id
      - name: abilityId
        type: uuid
      - type: i32
        name: predictionId
      - name: flag
        type: u32
      - branch:
          field: flag
          test_flag: 1
          isTrue:
            fields:
              - name: itemId
                type: uuid
      - branch:
          field: flag
          test_flag: 2
          isTrue:
            fields:
              - name: params
                type: cstring
      - branch:
          field: flag
          test_flag: 4
          isTrue:
            fields:
              - name: toggleMode
                type: u32
      - branch:
          field: flag
          test_flag: 8
          isTrue:
            fields:
              - type: i32
                name: comboStageId
      - branch:
          field: flag
          test_flag: 16
          isTrue:
            fields:
              - name: targetRotation
                type: :NetworkQuat
      - branch:
          field: flag
          test_flag: 32
          isTrue:
            fields:
              - type: :NetworkVec3
  oaPktAbilityUse:
    id: 0x8c
    subId: 0x16
    inherit: CPkt
    fields:
      - type: u16
        name: flag
      - type: avatar_id
        name: player
      - type: avatar_id
        name: sourceAvatar
      - type: uuid
        name: sourceId
      - type: uuid
        name: skillId
      - type:
          name: u8
          enum:
            1: Item
            2: Skill
            3: Buff
        name: abilityType
      - branch:
          field: flag
          test_flag: 1
          isTrue:
            fields:
              - type: avatar_id
                name: target
      - branch:
          field: flag
          test_flag: 2
          isTrue:
            fields:
              - type: :NetworkQuat
                name: rotation
      - branch:
          field: flag
          test_flag: 4
          isTrue:
            fields:
              - type: :NetworkVec3
                name: targetHitLocation
      - type: :NetworkVec3
        name: abilityInvokeLocation
      - type: u32 # this is followed by an array of n elements
        name: effectCount
      - name: effects
        type: { name: array, len: effectCount, type: :AbilityEffect}
      - type: 
          name: u8
          enum:
            0: Charge
            1: Use
            2: Negate
            3: Channel
            4: Cancel
            5: ChannelEnd
            6: Max
        name: eventType
      - type: f32
        name: serverEventDuration
      - type: i32
        name: predictionId
      - type: i32
        name: comboStageId
  oaPktThreatListUpdate:
    id: 0x8c
    subId: 0x96
    inherit: CPkt
    fields:
      - type: avatar_id
      - type: bool
      - type: avatar_id
structures:
  PortalAckPartA:
    fields:
      - name: mapName
        type: cstring 
      - name: worldName
        type: cstring
      - name: displayName
        type: cstring
      - name: worldIcon
        type: cstring
      - name: portalIcon
        type: cstring
      - name: description
        type: cstring
      - name: portalType
        type: u32
      - name: worldType
        type: u32
      - type: u32
  PortalAckPartB:
    fields:
      - name: mapName
        type: cstring 
      - name: worldName
        type: cstring
      - name: displayName
        type: cstring
      - name: worldIcon
        type: cstring
      - name: portalIcon
        type: cstring
      - name: description
        type: cstring
      - name: portalType
        type: u32
      - name: worldType
        type: u32
      - name: playerLevel
        type: u32
      - name: level
        type: u32
  AbilityEffect:
    fields:
      - name: targetActor
        type: avatar_id
      - name: effectType
        type: i32
      - name: flags
        type: u16
      - branch:
          field: flags
          test_flag: 1
          isTrue:
            fields:
            - name: movemanagerKeyUsedOnServer
              type: u16
            - name: newLocationForcedByEffect
              type: :NetworkVec3
      - branch:
          field: flags
          test_flag: 2
          isTrue:
            fields:
            - type: i32 # This is read as effectType too and overrides the previous value
      - branch:
          field: flags
          test_flag: 4
          isTrue:
            fields:
            - type: i32 
              name: combatFlags
      - branch:
          field: flags
          test_flag: 8
          isTrue:
            fields:
            - name: totalDamageOrHealAmount
              type: f32
      - branch:
          field: flags
          test_flag: 16
          isTrue:
            fields:
            - name: effectDelay
              type: f32
      - branch:
          field: flags
          test_flag: 32
          isTrue:
            fields:
            - name: effectDurationFromServer
              type: f32
      - branch:
          field: flags
          test_flag: 64
          isTrue:
            fields:
            - name: deltaHpId
              type: i32